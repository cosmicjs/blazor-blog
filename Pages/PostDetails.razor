@page "/post/{Slug}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using Microsoft.Extensions.Configuration;
@using System.Text.Json.Serialization
@using Models
@inject IConfiguration Configuration

@if (postDetails != null && postDetails.post == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <section class="text-gray-700 body-font">
        <div class="container mx-auto flex px-5 pb-24 items-center justify-center flex-col">
            <h1 class="title-font sm:text-4xl text-3xl mb-4 font-medium text-gray-900">@postDetails.post.Title</h1>
            <img class=" mb-10 object-cover object-center rounded" alt="hero" src="@postDetails.post.Metadata.hero.imgix_url">
            <div class=" w-full">
                <h4  class="italic underline font-bold pb-4">Written by: @postDetails.post.Metadata.author.title</h4>
                <div class="mb-8 leading-relaxed">@((MarkupString)postDetails.post.Content)</div>
            </div>
            <div class="p-2 w-full">
                <button class="flex mx-auto text-white bg-indigo-500 border-0 py-2 px-8 focus:outline-none hover:bg-indigo-600 rounded text-lg" @onclick="NavigateToIndexComponent">Back</button>
            </div>
        </div>
    </section>
}

@code {
    [Parameter] public string Slug { get; set; }

    private PostDetail postDetails = new PostDetail();

    protected override async Task OnInitializedAsync()
    {
        string cosmic_bucket_slug = Configuration["AppSettings:COSMIC_BUCKET_SLUG"];
        string cosmic_read_key = Configuration["AppSettings:COSMIC_READ_KEY"];
        string queryParam = $"{{\"type\":\"blogs\",\"slug\":\"{Slug}\"}}";
        string encodedQueryParam = HttpUtility.UrlEncode(queryParam);
        var url = $"https://api.cosmicjs.com/v3/buckets/{cosmic_bucket_slug}/objects/?query={encodedQueryParam}&pretty=true&hide_metafields=true&read_key={cosmic_read_key}";
        url = url.Replace("{COSMIC_BUCKET_SLUG}", cosmic_bucket_slug);
        url = url.Replace("{COSMIC_READ_KEY}", cosmic_read_key);
        postDetails = await Http.GetFromJsonAsync<PostDetail>(url.Replace("{Slug}", Slug));
        postDetails.post.Metadata.hero.imgix_url = postDetails.post.Metadata.hero.imgix_url + "?w=720&h=600";
    }

    private void NavigateToIndexComponent()
    {
        NavigationManager.NavigateTo("");
    }

    public class PostDetail
    {
        [JsonPropertyName("object")]
        public Post post { get; set; }
    }
}
